     1                                  bits 32 
     2                                  
     3                                  global start        
     4                                  
     5                                  
     6                                  extern exit               
     7                                  import exit msvcrt.dll    
     8                                  
     9                                  ; a - byte, b - word, c - doubleword, x - qword - Interpretare fara semn
    10                                  segment data use32 class=data
    11 00000000 01                          a db 1
    12 00000001 0100                        b dw 1
    13 00000003 0C000000                    c dd 12
    14 00000007 0F00000000000000            x dq 15
    15 0000000F <res 00000004>              z resd 1
    16                                      
    17                                  ; 14. x+(2-a*b)/(a*3)-a+c
    18                                  segment code use32 class=code
    19                                      start:
    20                                          ;(2-a*b)
    21 00000000 66B80000                        mov ax, 0
    22 00000004 A0[00000000]                    mov al, [a]
    23 00000009 66F725[01000000]                mul word [b]
    24 00000010 6652                            push dx
    25 00000012 6650                            push ax
    26 00000014 58                              pop eax
    27 00000015 BB02000000                      mov ebx, 2
    28 0000001A 29C3                            sub ebx, eax    
    29 0000001C 891D[0F000000]                  mov [z], ebx    ; rezultatul se afla in z (dword)
    30                                          
    31                                          ;(a*3)
    32 00000022 A0[00000000]                    mov al, [a]
    33 00000027 B203                            mov dl, 3
    34 00000029 F6E2                            mul dl
    35 0000002B 6689C1                          mov cx, ax      ; rezultatul se afla in cx (word)
    36                                          
    37                                          ;(2-a*b)/(a*3)
    38 0000002E 66A1[0F000000]                  mov ax, word [z]
    39 00000034 668B15[11000000]                mov dx, word [z+2]
    40 0000003B 66F7F1                          div cx         
    41 0000003E 6689C3                          mov bx, ax      ; rezultatul se afla in bx (word)
    42                                          
    43                                          ;x+(2-a*b)/(a*3)
    44 00000041 B800000000                      mov eax, 0
    45 00000046 BA00000000                      mov edx, 0
    46 0000004B 6689D8                          mov ax, bx
    47 0000004E 0105[07000000]                  add dword [x], eax
    48 00000054 1115[0B000000]                  adc dword [x+4], edx
    49                                          
    50                                          ;x+(2-a*b)/(a*3)-a
    51 0000005A B800000000                      mov eax, 0
    52 0000005F BA00000000                      mov edx, 0
    53 00000064 A0[00000000]                    mov al, [a]
    54 00000069 2905[07000000]                  sub dword [x], eax
    55 0000006F 1915[0B000000]                  sbb dword [x+4], edx
    56                                          
    57                                          ;x+(2-a*b)/(a*3)-a+c
    58 00000075 A1[03000000]                    mov eax, [c]
    59 0000007A BA00000000                      mov edx, 0
    60 0000007F 0105[07000000]                  add dword [x], eax
    61 00000085 1115[0B000000]                  adc dword [x+4], edx      ; rezultatul se afla in x
    62                                          
    63 0000008B 6A00                            push    dword 0      
    64 0000008D FF15[00000000]                  call    [exit]       
