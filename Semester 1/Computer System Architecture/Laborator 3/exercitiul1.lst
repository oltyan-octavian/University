     1                                  bits 32
     2                                  
     3                                  global start
     4                                  
     5                                  extern exit
     6                                  import exit msvcrt.dll
     7                                  
     8                                  ; a,b,c,d-byte, e,f,g,h-word
     9                                  segment data use32 class=data
    10 00000000 02                          a db 2
    11 00000001 01                          b db 1
    12 00000002 02                          c db 2
    13 00000003 03                          d db 3
    14 00000004 0200                        e dw 2
    15 00000006 0200                        h dw 2
    16 00000008 <res 00000002>              x resw 1
    17 0000000A <res 00000001>              y resb 1
    18                                  
    19                                  ; (a*d+e)/[c+h/(c-b)]
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ;a*d
    23 00000000 A0[00000000]                    mov al, [a]
    24 00000005 F625[03000000]                  mul byte [d]
    25                                          
    26                                          ;(a*d+e)
    27 0000000B 660305[04000000]                add ax, [e]
    28 00000012 66A3[08000000]                  mov [x], ax     ; rezultatul il punem in x
    29                                          
    30                                          ;c-b
    31 00000018 A0[02000000]                    mov al, [c]
    32 0000001D 2A05[01000000]                  sub al, [b]
    33 00000023 88C3                            mov bl, al      ;rezultatul il punem in bl
    34                                          
    35                                          ;h/(c-b)
    36 00000025 F6F3                            div bl
    37                                          
    38                                          ;c+h/(c-b)
    39 00000027 0005[02000000]                  add [c], al
    40                                          
    41                                          ;(a*d+e)/[c+h/(c-b)]
    42 0000002D 66A1[08000000]                  mov ax, [x]
    43 00000033 F635[02000000]                  div byte [c]
    44 00000039 A2[0A000000]                    mov [y], al
    45                                          
    46 0000003E 6A00                            push dword 0
    47 00000040 FF15[00000000]                  call [exit]
