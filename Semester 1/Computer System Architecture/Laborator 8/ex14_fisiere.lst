     1                                  bits 32
     2                                  global start
     3                                  
     4                                  extern exit, fprintf, printf, fopen, fclose
     5                                  import exit msvcrt.dll
     6                                  import fopen msvcrt.dll
     7                                  import fprintf msvcrt.dll
     8                                  import printf msvcrt.dll
     9                                  import fclose msvcrt.dll
    10                                  
    11                                  segment data use32 class=data
    12 00000000 414E41204E55204152-         sir db "ANA NU ARE mere!!23", 0
    12 00000009 45206D657265212132-
    12 00000012 3300               
    13                                      len equ $-sir
    14 00000014 00<rept>                    d times len db 0
    15 00000028 7700                        mod_acces db 'w', 0
    16 0000002A 7369722E74787400            nume_fisier db "sir.txt", 0
    17 00000032 00000000                    descriptor_fisier dd 0
    18 00000036 446573636869646572-         mesaj_eroare db "Deschiderea fisierului a esuat.", 0
    18 0000003F 656120666973696572-
    18 00000048 756C75692061206573-
    18 00000051 7561742E00         
    19                                      
    20                                  ; 14. Se dau un nume de fisier si un text (definite in segmentul de date). 
    21                                  ; Textul contine litere mici, litere mari, cifre si caractere speciale.
    22                                  ; Sa se transforme toate literele mari din textul dat in litere mici.
    23                                  ; Sa se creeze un fisier cu numele dat si sa se scrie textul obtinut in fisier.
    24                                  segment code use32 class=code
    25                                      start:
    26                                          ; eax = fopen(nume_fisier, mod_acces)
    27 00000000 68[28000000]                    push dword mod_acces     
    28 00000005 68[2A000000]                    push dword nume_fisier
    29 0000000A FF15[00000000]                  call [fopen]
    30 00000010 83C408                          add esp, 4*2                ; eliberam parametrii de pe stiva
    31 00000013 A3[32000000]                    mov [descriptor_fisier], eax   ; salvam valoarea returnata de fopen in variabila descriptor_fis
    32                                          
    33                                          ;verificam daca a deschis fisierul
    34 00000018 83F800                          cmp eax, 0
    35 0000001B 7445                            je eroare
    36                                          
    37                                          ;modificam sirul
    38 0000001D FC                              cld
    39 0000001E B914000000                      mov ecx, len
    40 00000023 BE[00000000]                    mov esi, sir
    41 00000028 BF[14000000]                    mov edi, d
    42 0000002D E341                            jecxz final
    43                                          repeta:
    44 0000002F AC                                  lodsb
    45 00000030 3C41                                cmp al, 'A'
    46 00000032 7206                                jb next
    47 00000034 3C5A                                cmp al, 'Z'
    48 00000036 7702                                ja next
    49 00000038 0420                                add al, 32
    50                                              next:
    51 0000003A AA                                  stosb
    52 0000003B E2F2                                loop repeta
    53                                              
    54                                          
    55                                          ; fprintf(descriptor_fisier, d)
    56 0000003D 68[14000000]                    push dword d
    57 00000042 FF35[32000000]                  push dword [descriptor_fisier]
    58 00000048 FF15[00000000]                  call [fprintf]
    59 0000004E 83C408                          add esp, 4*2
    60                                          
    61                                          ; apelam functia fclose pentru a inchide fisierul
    62                                          ; fclose(descriptor_fisier)
    63 00000051 FF35[32000000]                  push dword [descriptor_fisier]
    64 00000057 FF15[00000000]                  call [fclose]
    65 0000005D 83C404                          add esp, 4
    66 00000060 EB0E                            jmp final
    67                                          
    68                                      eroare:
    69 00000062 68[36000000]                    push dword mesaj_eroare
    70 00000067 FF15[00000000]                  call [printf]
    71 0000006D 83C404                          add esp, 4*1
    72                                      
    73                                      final:
    74 00000070 6A00                            push dword 0        ; push the parameter for exit onto the stack
    75 00000072 FF15[00000000]                  call [exit]         ; call exit to terminate the program
